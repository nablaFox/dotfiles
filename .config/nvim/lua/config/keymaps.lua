local keys = {
	{ 'delete to black hole register',         'd',         '"_d',                                          'n', },
	{ 'delete',                                '<leader>d', 'd',                                            'n', },
	{ 'delete to black hole register',         'D',         '"_D',                                          'n', },
	{ 'delete to end of line',                 '<leader>D', 'D',                                            'n', },
	{ 'delete to black hole register',         'd',         '"_d',                                          'v', },
	{ 'delete',                                '<leader>d', 'd',                                            'v', },
	{ 'change to black hole register',         'c',         '"_c',                                          'n', },
	{ 'change',                                '<leader>c', 'c',                                            'n', },
	{ 'change to black hole register',         'C',         '"_C',                                          'n', },
	{ 'change to end of line',                 '<leader>C', 'C',                                            'n', },
	{ 'scroll up half screen',                 '<C-u>',     '<C-u>zz',                                      'n', },
	{ 'scroll down half screen',               '<C-d>',     '<C-d>zz',                                      'n', },
	{ 'move line down',                        '<A-j>',     ':m .+1<CR>==',                                 'n', },
	{ 'move line up',                          '<A-k>',     ':m .-2<CR>==',                                 'n', },
	{ 'insert mode move line down',            '<A-j>',     '<Esc>:m .+1<CR>==gi',                          'i', },
	{ 'insert mode move line up',              '<A-k>',     '<Esc>:m .-2<CR>==gi',                          'i', },
	{ 'visual mode move line down',            '<A-j>',     ':m \'>+1<CR>gv=gv',                            'v', },
	{ 'visual mode move line up',              '<A-k>',     ':m \'<-2<CR>gv=gv',                            'v', },
	{ 'copy entire file content to clipboard', '<F2>',      ':%y+<CR>',                                     'n', },
	{ 'delete entire file content',            '<F3>',      ':%d_<CR>',                                     'n', },
	{ 'save file',                             '<C-s>',     ':w!<CR>',                                      'n', },
	{ 'replace',                               '<leader>s', ':%s/',                                         'n', },
	{ 'split vertically',                      'mv',        ':vsplit<CR>',                                  'n', },
	{ 'split horizontally',                    'mh',        ':split<CR>',                                   'n', },
	{ 'new tab',                               'mm',        ':tabnew<CR>',                                  'n', },
	{ 'exit Neovim',                           'mq',        ':qa!<CR>',                                     'n', },
	{ 'equalize window sizes',                 '=',         ':wincmd =<CR>',                                'n', },
	{ 'increase vertical size',                '+',         ':vertical resize +5<CR>',                      'n', },
	{ 'decrease vertical size',                '-',         ':vertical resize -5<CR>',                      'n', },
	{ 'increase horizontal size',              '<leader>+', ':resize +5<CR>',                               'n', },
	{ 'decrease horizontal size',              '<leader>-', ':resize -5<CR>',                               'n', },
	{ 'equalize horizontal sizes',             '<leader>=', ':resize<CR>',                                  'n', },
	{ 'close window',                          'qq',        '<C-w>q',                                       'n', },
	{ 'clear search',                          '<A-l>',     '<Cmd>nohlsearch|diffupdate|normal! <C-L><CR>', 'n', },
	{ 'move left',                             '<C-h>',     '<C-w>h',                                       'n', },
	{ 'move right',                            '<C-l>',     '<C-w>l',                                       'n', },
	{ 'move down',                             '<C-j>',     '<C-w>j',                                       'n', },
	{ 'move up',                               '<C-k>',     '<C-w>k',                                       'n', },
	{ 'open .nvim.lua',                        '<C-9>',     ':vnew .nvim.lua<CR>',                          'n', },
	{ 'next tab',                              '<C-Tab>',   ':tabnext<CR>',                                 'n', },
	{ 'previous tab',                          '<C-S-Tab>', ':tabprevious<CR>',                             'n', },
	{ 'go to previous diagnostic',             '[g',        '<cmd>lua vim.diagnostic.goto_prev()<CR>',      'n', },
	{ 'go to next diagnostic',                 ']g',        '<cmd>lua vim.diagnostic.goto_next()<CR>',      'n', },
}

for _, map in ipairs(keys) do
	local desc, lhs, rhs, mode, nowait = map[1], map[2], map[3], map[4], map[5]
	local opts = { noremap = true, silent = true, desc = desc }
	if nowait then opts.nowait = true end
	vim.keymap.set(mode, lhs, rhs, opts)
end
